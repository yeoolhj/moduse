import { ModuleRoot, ModuleCreate } from "moduse";
export declare function createHook<K extends typeof ModuleRoot, T extends InstanceType<K>, N extends Capitalize<string>>(ModuleClass: K, moduleName: N): { [name in `use${N}`]: () => T; } & { [name_1 in `init${N}`]: (options?: (((K["create"] extends ModuleCreate<infer P> ? P : never) extends keyof T ? { [name_2 in K["create"] extends ModuleCreate<infer P> ? P : never]?: Partial<T[name_2]> | undefined; } : never) & ThisType<T>) | undefined) => T; } & { [name_3 in `set${N}Options`]: (options: ((K["create"] extends ModuleCreate<infer P> ? P : never) extends keyof T ? { [name_2 in K["create"] extends ModuleCreate<infer P> ? P : never]?: Partial<T[name_2]> | undefined; } : never) & ThisType<T>) => void; };
